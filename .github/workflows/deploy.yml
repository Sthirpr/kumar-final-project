name: Build and Deploy Flask App

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: flask-app
  ECS_CLUSTER: flask-cluster
  ECS_SERVICE: flask-service
  CONTAINER_PORT: 3000

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    # Checkout code
    - name: Checkout repository
      uses: actions/checkout@v4

    # Configure AWS credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # Login to ECR
    - name: Login to Amazon ECR
      id: login-ecr
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login \
          --username AWS \
          --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      env:
        ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

    # Build, tag, and push image to Amazon ECR
    - name: Build, Tag, and Push Docker Image
      run: |
        docker build -t $ECR_REPOSITORY .
        docker tag $ECR_REPOSITORY:latest $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest
        docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest
      env:
        ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

    # Deploy to ECS
    - name: Deploy to ECS
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --force-new-deployment \
          --region $AWS_REGION

    # Verify deployment
    - name: Verify Deployment
      run: |
        echo "Waiting for service to stabilize..."
        aws ecs wait services-stable \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --region $AWS_REGION
        echo "Deployment successful!"

        # Get ALB DNS name from Terraform output
        ALB_DNS=$(terraform output -raw alb_dns_name)
        echo "Application URL: http://$ALB_DNS"
