name: Build, Push, and Deploy

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1                   # Change to your region
  ECR_REPOSITORY: kumar-final-api
  ECS_CLUSTER: kumar-final-cluster
  ECS_SERVICE: kumar-final-service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    # Checkout code
    - name: Checkout
      uses: actions/checkout@v3
    
    # Configure AWS credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    # Login to Amazon ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Create ECR Repository 
        run: |
          aws ecr describe-repositories --repository-names ${{ env.ECR_REPO }} || \
          aws ecr create-repository --repository-name ${{ env.ECR_REPO }}
    # Build, tag, and push image to Amazon ECR
    - name: Build, Tag, and Push
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
    
    # Deploy to ECS
    - name: Deploy to ECS
      run: |
        aws ecs update-service \
          --cluster ${{ env.ECS_CLUSTER }} \
          --service ${{ env.ECS_SERVICE }} \
          --force-new-deployment \
          --region ${{ env.AWS_REGION }}
