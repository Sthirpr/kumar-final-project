name: Build and Deploy

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: "783764594790"  # Your AWS account ID
  ECR_REPOSITORY: "flask-app"     # Must match your ECR repo name
  ECS_CLUSTER: "flask-cluster"
  ECS_SERVICE: "flask-service"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    # 1. Checkout code
    - name: Checkout
      uses: actions/checkout@v4

    # 2. Configure AWS credentials
    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # 3. Create ECR repo if missing
    - name: Ensure ECR Repository
      run: |
        aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY }} || \
        aws ecr create-repository --repository-name ${{ env.ECR_REPOSITORY }}

    # 4. Login to ECR
    - name: Login to ECR
      run: |
        aws ecr get-login-password | docker login \
          --username AWS \
          --password-stdin \
          ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

    # 5. Build and push image
    - name: Build and Push
      run: |
        docker build -t ${{ env.ECR_REPOSITORY }} .
        docker tag ${{ env.ECR_REPOSITORY }}:latest \
          ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest
        docker push \
          ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest

    # 6. Deploy to ECS
    - name: Deploy to ECS
      run: |
        aws ecs update-service \
          --cluster ${{ env.ECS_CLUSTER }} \
          --service ${{ env.ECS_SERVICE }} \
          --force-new-deployment \
          --region ${{ env.AWS_REGION }}
